/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/track.js":
/*!*******************************!*\
  !*** ./resources/js/track.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // DEFINE VARIABLES\n\nvar _document = document,\n    searchForm = _document.searchForm,\n    btnSubmit = searchForm.btnSubmit,\n    btnReset = searchForm.btnReset,\n    searchString = searchForm.searchString,\n    tabelBody = document.querySelector(\".table-body\");\nvar compositionsArray = {},\n    isLoadData = false;\nvar tabelBodyHeight = {\n  \"get\": tabelBody.clientHeight,\n  \"update\": function update() {\n    this.get = tabelBody.clientHeight;\n  }\n};\nvar windowHeight = window.outerHeight;\nwindow.addEventListener(\"load\", function () {\n  tabelBodyHeight.update();\n});\nwindow.addEventListener(\"resize\", function () {\n  windowHeight = window.outerHeight;\n  tabelBodyHeight.update();\n}); // DEFINE OBJECT TO GET PARAMETRS FOR SEARCH/SORT\n\nvar getParams = {\n  \"title\": \"\",\n  \"getTitle\": function getTitle() {\n    return this.title.length ? \"&title=\".concat(this.title) : \"\";\n  },\n  \"tags\": [],\n  \"getTags\": function getTags() {\n    if (!this.tags.length) {\n      return \"\";\n    }\n\n    var arr = this.tags.map(function (tagVal) {\n      return \"&tags[]=\".concat(tagVal);\n    });\n    return arr.join(\"\");\n  },\n  \"sortBy\": \"\",\n  \"sortType\": \"\",\n  \"getSort\": function getSort() {\n    if (this.sortBy === \"\" || this.sortType === \"\") {\n      return \"\";\n    }\n\n    return \"&sortBy=\".concat(this.sortBy, \"&sortType=\").concat(this.sortType);\n  },\n  \"page\": 1,\n  \"maxPage\": 2,\n  \"nextPage\": function nextPage() {\n    this.page = this.page < this.maxPage ? this.page + 1 : this.maxPage;\n  },\n  \"getPage\": function getPage() {\n    return \"&page=\".concat(this.page);\n  }\n}; // FUNCTION FOR RENDER TABLE ROW\n\nvar generateTable = function generateTable(data, replace) {\n  var rows = new DocumentFragment();\n  data.forEach(function (composition) {\n    var _composition$title = composition.title,\n        title = _composition$title === void 0 ? \"\" : _composition$title,\n        _composition$tags = composition.tags,\n        tags = _composition$tags === void 0 ? [] : _composition$tags,\n        _composition$lastPlay = composition.lastPlayed,\n        lastPlayed = _composition$lastPlay === void 0 ? \"\" : _composition$lastPlay,\n        _composition$composer = composition.composer,\n        composer = _composition$composer === void 0 ? {} : _composition$composer;\n    var tagsHtml = \"<ul class='tags-list'>\",\n        i = 0;\n    var length = tags.length;\n\n    for (i; i < length; i++) {\n      tagsHtml += \"<li class=\\\"tags-list_item\\\">\".concat(tags[i].title, \"</li>\");\n    }\n\n    tagsHtml += \"</ul>\";\n    var row = document.createElement(\"div\");\n    row.classList.add(\"table-row\");\n    row.innerHTML = \"<div class=\\\"table-row_cell table-row_cell-title\\\">\\n                        <div class=\\\"author\\\">\".concat(composer.composerName, \"</div>\\n                        \").concat(title, \"\\n                    </div>\\n                    <div class=\\\"table-row_cell table-row_cell-tags\\\">\\n                            \").concat(tagsHtml, \"\\n                    </div>\\n                    <div class=\\\"table-row_cell table-row_cell-date\\\">\").concat(lastPlayed, \"</div>\");\n    rows.appendChild(row);\n  });\n\n  if (replace) {\n    tabelBody.innerHTML = \"\";\n  }\n\n  tabelBody.appendChild(rows); // eslint-disable-next-line no-unused-expressions\n\n  tabelBody.offsetTop;\n  tabelBodyHeight.update();\n}; // MAIN FUNCTION TO GET COMPOSITIONS\n\n\nvar getCompositions = function getCompositions() {\n  var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  param.replace = typeof param.replace === \"undefined\" ? true : param.replace;\n  var url = \"/async/tracks?\".concat(getParams.getTitle()).concat(getParams.getTags()).concat(getParams.getSort()).concat(getParams.getPage());\n  isLoadData = true;\n  requestData(url).then(function (result) {\n    var json = result.response; // eslint-disable-next-line no-console\n\n    console.log(json);\n\n    if (json.status === \"success\") {\n      if (!json.data.length) {\n        var row = \"<div class='table-row table-row_error'>Таких произведений не найдено</div>\";\n        tabelBody.innerHTML = row;\n        return;\n      }\n\n      compositionsArray = json.data;\n      generateTable(compositionsArray, param.replace);\n      getParams.page = json.meta.current_page;\n      getParams.maxPage = json.meta.last_page;\n      isLoadData = false;\n    } else {\n      // eslint-disable-next-line guard-for-in\n      for (var key in json.errors) {\n        var error = json.errors[key];\n        var length = error.length;\n        var i = 0;\n\n        for (i; i < length; i++) {\n          var mess = message({\n            \"text\": error[i]\n          });\n          mess.show();\n        }\n      }\n\n      isLoadData = false;\n    }\n  }, function (error) {\n    // eslint-disable-next-line no-console\n    console.log(\"Rejected: \".concat(error));\n  });\n};\n\nsearchForm.addEventListener(\"submit\", function (event) {\n  event.preventDefault();\n  getParams.title = searchString.value;\n  getParams.page = 1;\n  getCompositions();\n\n  if (searchString !== \"\") {\n    btnReset.classList.add(\"show\");\n    btnSubmit.classList.add(\"hide\");\n  }\n});\nsearchString.addEventListener(\"input\", function () {\n  btnSubmit.classList.remove(\"hide\");\n});\nbtnReset.addEventListener(\"click\", function () {\n  getParams.title = \"\";\n  getParams.tags = [];\n  getParams.sortBy = \"\";\n  getCompositions();\n  btnReset.classList.remove(\"show\");\n  btnSubmit.classList.remove(\"hide\");\n});\nvar tagsBtn = searchForm.querySelector(\".tag-btn\"),\n    $allTags = document.querySelector(\".all-tags .tags-list\");\ntagsBtn.addEventListener(\"focus\", function () {\n  tagsBtn.blur();\n});\nvar modalTags = modal({\n  \"title\": \"Поиск по тегам\",\n  \"content\": \"<form name=\\\"tagsForm\\\">\".concat($allTags.outerHTML, \"\\n<div class=\\\"btns text-center\\\">\\n<button type=\\\"submit\\\" name=\\\"btnSubmit\\\">\\u041F\\u043E\\u0438\\u0441\\u043A</button>\\n<button type=\\\"reset\\\" name=\\\"btnReset\\\" class=\\\"disagree\\\">\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C</button>\\n</div></form>\\n\"),\n  \"class\": \"tags-popup\",\n  \"onBuild\": function onBuild(modal) {\n    var _document2 = document,\n        tagsForm = _document2.tagsForm;\n    tagsForm.addEventListener(\"submit\", function (event) {\n      event.preventDefault();\n      var tags = tagsForm.querySelectorAll(\"input[type=checkbox]:checked\");\n      var tagsArray = Array.from(tags);\n      tagsArray = tagsArray.map(function (tag) {\n        return tag.value;\n      });\n      getParams.tags = tagsArray;\n      getParams.page = 1;\n      getCompositions();\n      modal.hide();\n    });\n  }\n});\ntagsBtn.addEventListener(\"click\", function (event) {\n  event.preventDefault();\n  modalTags.show();\n});\nvar sortByBtns = document.querySelectorAll(\".sortBy\");\n\nvar _loop = function _loop(i, length) {\n  var btn = sortByBtns[i];\n  btn.addEventListener(\"click\", function () {\n    btn.dataset.sortType = \"\";\n    getParams.sortBy = btn.dataset.sortBy;\n    getParams.sortType = btn.dataset.sortTypeDefault;\n    getCompositions();\n  });\n};\n\nfor (var i = 0, length = sortByBtns.length; i < length; i++) {\n  _loop(i, length);\n}\n\nvar sortTypeBtns = document.querySelectorAll(\".sortType\");\n\nvar _loop2 = function _loop2(_i, _length) {\n  var btn = sortTypeBtns[_i]; // eslint-disable-next-line no-loop-func\n\n  btn.addEventListener(\"click\", function () {\n    var sortBy = document.querySelector(btn.dataset[\"for\"]);\n\n    if (!sortBy) {\n      var error = message({\n        \"text\": \"data-for не верный, попросите Лешу глянуть файл track.js в районе 262 строчки\"\n      });\n      error.show();\n      return;\n    }\n\n    var prevType = sortBy.dataset.sortType ? sortBy.dataset.sortType : sortBy.dataset.sortTypeDefault;\n    var newType = prevType === \"desc\" ? \"asc\" : \"desc\";\n    sortBy.dataset.sortType = newType;\n    getParams.sortBy = sortBy.dataset.sortBy;\n    getParams.sortType = newType;\n    getCompositions();\n  });\n};\n\nfor (var _i = 0, _length = sortTypeBtns.length; _i < _length; _i++) {\n  _loop2(_i, _length);\n}\n\nvar paginate = function paginate() {\n  var lastKnownScrollPosition = 0;\n  var ticking = false;\n  var whenLoad = 0.6;\n\n  var getCoords = function getCoords(elem) {\n    var box = elem.getBoundingClientRect();\n    return {\n      \"top\": box.top + pageYOffset,\n      \"left\": box.left + pageXOffset\n    };\n  };\n\n  var tabelCoor = getCoords(tabelBody);\n\n  var doSomething = function doSomething(scrollPos) {\n    var endPoint = tabelCoor.top + tabelBodyHeight.get;\n    var currentEndPoint = scrollPos + windowHeight;\n    var makeLoad = currentEndPoint >= endPoint * whenLoad; // eslint-disable-next-line no-console\n    // console.log(currentEndPoint, endPoint * whenLoad);\n\n    if (makeLoad && !isLoadData && getParams.page < getParams.maxPage) {\n      getParams.nextPage();\n      getCompositions({\n        \"replace\": false\n      });\n    }\n  };\n\n  window.addEventListener(\"scroll\", function () {\n    lastKnownScrollPosition = window.scrollY;\n\n    if (!ticking) {\n      window.requestAnimationFrame(function () {\n        doSomething(lastKnownScrollPosition);\n        ticking = false;\n      });\n      ticking = true;\n    }\n  });\n};\n\npaginate();\nvar addCompoBtn = document.getElementById(\"add-compositions\");\nvar modalNewCompo = modal({\n  \"title\": \"Новая композиция\",\n  \"content\": \"\\n    <form name=\\\"newCompos\\\">\\n    <label><input type=\\\"text\\\" name=\\\"composition\\\" class=\\\"field-bordered\\\"><span class=\\\"placeholder\\\">\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435</span></label>\\n    <label class=\\\"label__one-row\\\">\\n    <select name=\\\"author\\\" class=\\\"field-bordered\\\">\\n        <option>\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0430\\u0432\\u0442\\u043E\\u0440\\u0430</option>\\n    </select>\\n    <button class=\\\"btn__next-field btn-def btn-circle btn-usually btn__show-item\\\" data-target=\\\".new-composer__row\\\">+</button>\\n    </label>\\n    <label class=\\\"new-composer__row label__one-row hidden\\\">\\n    <input class=\\\"field-bordered\\\" name=\\\"new-composer\\\" type=\\\"text\\\">\\n    <span class=\\\"placeholder\\\">\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0430\\u0432\\u0442\\u043E\\u0440</span>\\n    <button class=\\\"btn__next-field btn-def btn-circle btn-success btn__add-arrow\\\"><img src=\\\"./image/add-arrow.svg\\\"></button>\\n    </label>\\n    <label class=\\\"label__one-row\\\">\\n    <select name=\\\"author\\\" class=\\\"field-bordered\\\">\\n        <option>\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0435\\u0433\\u0438</option>\\n    </select>\\n    <button class=\\\"btn__next-field btn-def btn-circle btn-usually btn__show-item\\\" data-target=\\\".new-tags__row\\\">+</button></label>\\n    <label class=\\\"new-tags__row label__one-row hidden\\\">\\n    <input class=\\\"field-bordered\\\" name=\\\"new-tags\\\" type=\\\"text\\\">\\n    <span class=\\\"placeholder\\\">\\u041D\\u043E\\u0432\\u044B\\u0435 \\u0442\\u0435\\u0433\\u0438</span>\\n    <button class=\\\"btn__next-field btn-def btn-circle btn-success btn__add-arrow\\\"><img src=\\\"./image/add-arrow.svg\\\"></button>\\n    </label>\\n    <div class=\\\"btns text-center\\\">\\n    <button type=\\\"submit\\\" name=\\\"btnSubmit\\\">\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C</button>\\n    </div>\\n    </form>\",\n  \"class\": \"tags-popup\",\n  \"onBuild\": function onBuild(modal) {\n    var _document3 = document,\n        tagsForm = _document3.tagsForm;\n    tagsForm.addEventListener(\"submit\", function (event) {\n      event.preventDefault();\n      var tags = tagsForm.querySelectorAll(\"input[type=checkbox]:checked\");\n      var tagsArray = Array.from(tags);\n      tagsArray = tagsArray.map(function (tag) {\n        return tag.value;\n      });\n      getParams.tags = tagsArray;\n      getParams.page = 1;\n      getCompositions();\n      modal.hide();\n    });\n  }\n});\naddCompoBtn.addEventListener(\"click\", function () {\n  modalNewCompo.show();\n});\n\nfunction showHideElements() {\n  function showElements(elem) {\n    var selector = elem.dataset.target || null;\n    var target = document.querySelector(selector);\n\n    if (target.classList.contains('hidden') && target !== null) {\n      target.classList.remove('hidden');\n    }\n  }\n\n  function hideElements(elem) {\n    var selector = elem.dataset.target || null;\n    var target = document.querySelector(selector);\n\n    if (!target.classList.contains('hidden') && target !== null) {\n      target.classList.add('hidden');\n    }\n  }\n\n  function init() {\n    document.addEventListener(\"click\", function (event) {\n      var classList = event.target.classList;\n\n      if (classList.contains('btn__show-item')) {\n        event.preventDefault();\n        showElements(event.target);\n      } else if (classList.contains('btn__hide-item')) {\n        event.preventDefault();\n        hideElements(event.target);\n      }\n    });\n  }\n\n  init();\n}\n\nshowHideElements();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/track.js\n");

/***/ }),

/***/ 1:
/*!*************************************!*\
  !*** multi ./resources/js/track.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /var/www/html/resources/js/track.js */"./resources/js/track.js");


/***/ })

/******/ });